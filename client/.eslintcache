[{"/home/student/Desktop/kursach/client/src/index.js":"1","/home/student/Desktop/kursach/client/src/App.js":"2","/home/student/Desktop/kursach/client/src/store/UserStore.js":"3","/home/student/Desktop/kursach/client/src/store/DeviceStore.js":"4","/home/student/Desktop/kursach/client/src/components/AppRouter.js":"5","/home/student/Desktop/kursach/client/src/components/NavBar.js":"6","/home/student/Desktop/kursach/client/src/http/userAPI.js":"7","/home/student/Desktop/kursach/client/src/routes.js":"8","/home/student/Desktop/kursach/client/src/http/index.js":"9","/home/student/Desktop/kursach/client/src/utils/consts.js":"10","/home/student/Desktop/kursach/client/src/pages/DevicePage.js":"11","/home/student/Desktop/kursach/client/src/pages/Auth.js":"12","/home/student/Desktop/kursach/client/src/pages/Basket.js":"13","/home/student/Desktop/kursach/client/src/pages/Shop.js":"14","/home/student/Desktop/kursach/client/src/pages/Admin.js":"15","/home/student/Desktop/kursach/client/src/http/deviceAPI.js":"16","/home/student/Desktop/kursach/client/src/components/Pages.js":"17","/home/student/Desktop/kursach/client/src/components/DeviceList.js":"18","/home/student/Desktop/kursach/client/src/components/BrandBar.js":"19","/home/student/Desktop/kursach/client/src/components/TypeBar.js":"20","/home/student/Desktop/kursach/client/src/components/modals/CreateBrand.js":"21","/home/student/Desktop/kursach/client/src/components/modals/CreateType.js":"22","/home/student/Desktop/kursach/client/src/components/modals/CreateDevice.js":"23","/home/student/Desktop/kursach/client/src/components/DeviceItem.js":"24","/home/student/Desktop/kursach/client/src/http/basketAPI.js":"25"},{"size":439,"mtime":1620570175373,"results":"26","hashOfConfig":"27"},{"size":829,"mtime":1620576686771,"results":"28","hashOfConfig":"27"},{"size":405,"mtime":1620577925258,"results":"29","hashOfConfig":"27"},{"size":1298,"mtime":1620570175373,"results":"30","hashOfConfig":"27"},{"size":773,"mtime":1620576374441,"results":"31","hashOfConfig":"27"},{"size":4194,"mtime":1620573582478,"results":"32","hashOfConfig":"27"},{"size":784,"mtime":1620570175373,"results":"33","hashOfConfig":"27"},{"size":774,"mtime":1620570175373,"results":"34","hashOfConfig":"27"},{"size":407,"mtime":1620570175373,"results":"35","hashOfConfig":"27"},{"size":228,"mtime":1620570175373,"results":"36","hashOfConfig":"27"},{"size":2789,"mtime":1620580461533,"results":"37","hashOfConfig":"27"},{"size":3142,"mtime":1620577280105,"results":"38","hashOfConfig":"27"},{"size":583,"mtime":1620578403998,"results":"39","hashOfConfig":"27"},{"size":1538,"mtime":1620570175373,"results":"40","hashOfConfig":"27"},{"size":1549,"mtime":1620570175373,"results":"41","hashOfConfig":"27"},{"size":995,"mtime":1620570175373,"results":"42","hashOfConfig":"27"},{"size":801,"mtime":1620570175373,"results":"43","hashOfConfig":"27"},{"size":491,"mtime":1620570175369,"results":"44","hashOfConfig":"27"},{"size":759,"mtime":1620570175369,"results":"45","hashOfConfig":"27"},{"size":752,"mtime":1620570175373,"results":"46","hashOfConfig":"27"},{"size":1372,"mtime":1620570175373,"results":"47","hashOfConfig":"27"},{"size":1355,"mtime":1620570175373,"results":"48","hashOfConfig":"27"},{"size":6111,"mtime":1620570175373,"results":"49","hashOfConfig":"27"},{"size":1080,"mtime":1620570175369,"results":"50","hashOfConfig":"27"},{"size":328,"mtime":1620575709760,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"7ccj55",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},"/home/student/Desktop/kursach/client/src/index.js",[],["111","112"],"/home/student/Desktop/kursach/client/src/App.js",["113"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","/home/student/Desktop/kursach/client/src/store/UserStore.js",[],"/home/student/Desktop/kursach/client/src/store/DeviceStore.js",[],"/home/student/Desktop/kursach/client/src/components/AppRouter.js",[],"/home/student/Desktop/kursach/client/src/components/NavBar.js",[],"/home/student/Desktop/kursach/client/src/http/userAPI.js",["114"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const registration = async (email, password) => {\n    let role = \"USER\"\n    if (email == \"adminadmin@admin.com\") {\n        role = \"ADMIN\";\n      } \n    const {data} = await $host.post('api/user/registration', {email, password, role})\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n\nexport const login = async (email, password) => {\n    const {data} = await $host.post('api/user/login', {email, password})\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n\nexport const check = async () => {\n    const {data} = await $authHost.get('api/user/auth' )\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n","/home/student/Desktop/kursach/client/src/routes.js",[],"/home/student/Desktop/kursach/client/src/http/index.js",[],"/home/student/Desktop/kursach/client/src/utils/consts.js",[],"/home/student/Desktop/kursach/client/src/pages/DevicePage.js",["115"],"/home/student/Desktop/kursach/client/src/pages/Auth.js",[],"/home/student/Desktop/kursach/client/src/pages/Basket.js",[],"/home/student/Desktop/kursach/client/src/pages/Shop.js",["116","117"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","/home/student/Desktop/kursach/client/src/pages/Admin.js",[],"/home/student/Desktop/kursach/client/src/http/deviceAPI.js",["118"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","/home/student/Desktop/kursach/client/src/components/Pages.js",[],"/home/student/Desktop/kursach/client/src/components/DeviceList.js",[],"/home/student/Desktop/kursach/client/src/components/BrandBar.js",[],"/home/student/Desktop/kursach/client/src/components/TypeBar.js",["119"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","/home/student/Desktop/kursach/client/src/components/modals/CreateBrand.js",["120"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","/home/student/Desktop/kursach/client/src/components/modals/CreateType.js",[],"/home/student/Desktop/kursach/client/src/components/modals/CreateDevice.js",["121","122"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","/home/student/Desktop/kursach/client/src/components/DeviceItem.js",[],"/home/student/Desktop/kursach/client/src/http/basketAPI.js",["123"],"import {$authHost, $host} from \"./index\";\n\nexport const addItemToBasket = async ({ itemId, userId }) => {\n    const { data } = await $authHost.post('api/basket', { itemId, userId })\n    return data;\n}\n\nexport const getOne = async ({ userId }) => {\n  const { data } = await $authHost.get(`api/basket/${userId}`)\n  return data;\n}\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":18,"column":8,"nodeType":"130","endLine":18,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":6,"column":15,"nodeType":"134","messageId":"135","endLine":6,"endColumn":17},{"ruleId":"128","severity":1,"message":"136","line":21,"column":8,"nodeType":"130","endLine":21,"endColumn":10,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"138","line":23,"column":8,"nodeType":"130","endLine":23,"endColumn":10,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"138","line":30,"column":8,"nodeType":"130","endLine":30,"endColumn":65,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":18},{"ruleId":"141","severity":1,"message":"145","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":11},{"ruleId":"141","severity":1,"message":"146","line":4,"column":22,"nodeType":"143","messageId":"144","endLine":4,"endColumn":32},{"ruleId":"141","severity":1,"message":"147","line":5,"column":36,"nodeType":"143","messageId":"144","endLine":5,"endColumn":48},{"ruleId":"128","severity":1,"message":"138","line":18,"column":8,"nodeType":"130","endLine":18,"endColumn":10,"suggestions":"148"},{"ruleId":"141","severity":1,"message":"149","line":1,"column":20,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["152"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["154"],["155"],"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'createType' is defined but never used.","'fetchDevices' is defined but never used.",["156"],"'$host' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"161","fix":"165"},"Update the dependencies array to be: [user]",{"range":"166","text":"167"},"Update the dependencies array to be: [id]",{"range":"168","text":"169"},"Update the dependencies array to be: [device]",{"range":"170","text":"171"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"172","text":"173"},{"range":"174","text":"171"},[610,612],"[user]",[666,668],"[id]",[875,877],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749]]